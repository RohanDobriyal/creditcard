{"ast":null,"code":"var _jsxFileName = \"D:\\\\credit_card\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [sessionId] = useState(() => Date.now().toString());\n  const [msgs, setMsgs] = useState([{\n    from: \"bot\",\n    text: \"Hello! I’m your Credit Card Advisor. Let’s start with your profile.\"\n  }]);\n  const [input, setInput] = useState(\"\");\n  const bottomRef = useRef();\n\n  // Auto-scroll when new messages arrive\n  useEffect(() => {\n    var _bottomRef$current;\n    (_bottomRef$current = bottomRef.current) === null || _bottomRef$current === void 0 ? void 0 : _bottomRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [msgs]);\n\n  // Enforce numeric-only if last bot question contains “%”\n  const lastBot = [...msgs].reverse().find(m => m.from === \"bot\");\n  const numericOnly = lastBot === null || lastBot === void 0 ? void 0 : lastBot.text.includes(\"%\");\n  const sendMessage = async e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n\n    // 1) Echo user text\n    setMsgs(m => [...m, {\n      from: \"user\",\n      text: input\n    }]);\n    const text = input;\n    setInput(\"\");\n\n    // 2) Send to backend\n    const res = await fetch(\"http://localhost:8000/chat\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        session_id: sessionId,\n        message: text\n      })\n    });\n    const data = await res.json();\n\n    // 3a) If recommendations, inject each as plain‐text chat bubbles\n    if (data.recommendations) {\n      const recMsgs = data.recommendations.map(c => {\n        const rewards = Object.entries(c.rewards).map(([k, v]) => `${k.replace(/_/g, \" \")} ${v}%`).join(\", \");\n        const perks = c.perks.join(\", \");\n        return {\n          from: \"bot\",\n          text: `🏷️ ${c.name}\\n` + `Fee: ₹${c.annual_fee}/yr\\n` + `Rewards: ${rewards}\\n` + `Perks: ${perks}\\n` + `Reason: ${computeReason(c.rewards)}\\n`\n        };\n      });\n      setMsgs(m => [...m, ...recMsgs]);\n      return;\n    }\n\n    // 3b) Otherwise show next question or re‐ask if validation failed\n    if (data.reply) {\n      setMsgs(m => [...m, {\n        from: \"bot\",\n        text: data.reply\n      }]);\n    }\n  };\n\n  // Derive a friendly reason string from the rewards object\n  const computeReason = rewards => {\n    let best = [\"\", 0];\n    for (const [k, v] of Object.entries(rewards)) {\n      if (v > best[1]) best = [k, v];\n    }\n    const [k, v] = best;\n    if (k.includes(\"travel_miles\")) return `Excellent travel miles rate of ${v}%`;\n    if (k.includes(\"grocery_cashback\")) return `Great grocery cashback of ${v}%`;\n    if (k.includes(\"dining_cashback\")) return `High dining cashback of ${v}%`;\n    if (k.includes(\"fuel_cashback\")) return `Super fuel cashback of ${v}%`;\n    if (k.includes(\"all_spends_cashback\")) return `Flat cashback on all spends at ${v}%`;\n    return `Top reward rate: ${v}%`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen flex flex-col bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto p-4 flex flex-col gap-2 max-w-xl mx-auto\",\n      children: [msgs.map((m, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex w-full ${m.from === \"bot\" ? \"justify-start\" : \"justify-end\"}`,\n        children: /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: `\n              whitespace-pre-wrap p-3 rounded-lg border shadow\n              ${m.from === \"bot\" ? \"bg-white\" : \"bg-blue-500 text-white\"}\n              max-w-xs\n            `,\n          children: m.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: bottomRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      className: \"p-4 flex gap-2 max-w-xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: numericOnly ? \"number\" : \"text\",\n        inputMode: numericOnly ? \"numeric\" : \"text\",\n        pattern: numericOnly ? \"[0-9]*\" : undefined,\n        className: \"flex-grow p-2 border rounded\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type your answer\\u2026\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-600 text-white px-4 py-2 rounded\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"S/oAe6nyA5FdGv37goPaOT3vKFo=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","App","_s","sessionId","Date","now","toString","msgs","setMsgs","from","text","input","setInput","bottomRef","_bottomRef$current","current","scrollIntoView","behavior","lastBot","reverse","find","m","numericOnly","includes","sendMessage","e","preventDefault","trim","res","fetch","method","headers","body","JSON","stringify","session_id","message","data","json","recommendations","recMsgs","map","c","rewards","Object","entries","k","v","replace","join","perks","name","annual_fee","computeReason","reply","best","className","children","i","fileName","_jsxFileName","lineNumber","columnNumber","ref","onSubmit","type","inputMode","pattern","undefined","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["D:/credit_card/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nexport default function App() {\n  const [sessionId] = useState(() => Date.now().toString());\n  const [msgs, setMsgs] = useState([\n    { from: \"bot\", text: \"Hello! I’m your Credit Card Advisor. Let’s start with your profile.\" },\n  ]);\n  const [input, setInput] = useState(\"\");\n  const bottomRef = useRef();\n\n  // Auto-scroll when new messages arrive\n  useEffect(() => {\n    bottomRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [msgs]);\n\n  // Enforce numeric-only if last bot question contains “%”\n  const lastBot = [...msgs].reverse().find(m => m.from === \"bot\");\n  const numericOnly = lastBot?.text.includes(\"%\");\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n    if (!input.trim()) return;\n\n    // 1) Echo user text\n    setMsgs(m => [...m, { from: \"user\", text: input }]);\n    const text = input;\n    setInput(\"\");\n\n    // 2) Send to backend\n    const res = await fetch(\"http://localhost:8000/chat\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ session_id: sessionId, message: text }),\n    });\n    const data = await res.json();\n\n    // 3a) If recommendations, inject each as plain‐text chat bubbles\n    if (data.recommendations) {\n      const recMsgs = data.recommendations.map(c => {\n        const rewards = Object.entries(c.rewards)\n          .map(([k, v]) => `${k.replace(/_/g,\" \")} ${v}%`)\n          .join(\", \");\n        const perks = c.perks.join(\", \");\n        return {\n          from: \"bot\",\n          text:\n            `🏷️ ${c.name}\\n` +\n            `Fee: ₹${c.annual_fee}/yr\\n` +\n            `Rewards: ${rewards}\\n` +\n            `Perks: ${perks}\\n` +\n            `Reason: ${computeReason(c.rewards)}\\n`\n        };\n      });\n      setMsgs(m => [...m, ...recMsgs]);\n      return;\n    }\n\n    // 3b) Otherwise show next question or re‐ask if validation failed\n    if (data.reply) {\n      setMsgs(m => [...m, { from: \"bot\", text: data.reply }]);\n    }\n  };\n\n  // Derive a friendly reason string from the rewards object\n  const computeReason = (rewards) => {\n    let best = [\"\",0];\n    for (const [k,v] of Object.entries(rewards)) {\n      if (v > best[1]) best = [k,v];\n    }\n    const [k,v] = best;\n    if (k.includes(\"travel_miles\"))      return `Excellent travel miles rate of ${v}%`;\n    if (k.includes(\"grocery_cashback\"))  return `Great grocery cashback of ${v}%`;\n    if (k.includes(\"dining_cashback\"))   return `High dining cashback of ${v}%`;\n    if (k.includes(\"fuel_cashback\"))     return `Super fuel cashback of ${v}%`;\n    if (k.includes(\"all_spends_cashback\")) return `Flat cashback on all spends at ${v}%`;\n    return `Top reward rate: ${v}%`;\n  };\n\n  return (\n    <div className=\"h-screen flex flex-col bg-gray-100\">\n      {/* Chat history */}\n      <div className=\"flex-1 overflow-y-auto p-4 flex flex-col gap-2 max-w-xl mx-auto\">\n        {msgs.map((m,i) => (\n          <div\n            key={i}\n            className={`flex w-full ${m.from===\"bot\"?\"justify-start\":\"justify-end\"}`}\n          >\n            <pre className={`\n              whitespace-pre-wrap p-3 rounded-lg border shadow\n              ${m.from===\"bot\"?\"bg-white\":\"bg-blue-500 text-white\"}\n              max-w-xs\n            `}>\n              {m.text}\n            </pre>\n          </div>\n        ))}\n        <div ref={bottomRef} />\n      </div>\n\n      {/* Always-visible input */}\n      <form onSubmit={sendMessage} className=\"p-4 flex gap-2 max-w-xl mx-auto\">\n        <input\n          type={numericOnly?\"number\":\"text\"}\n          inputMode={numericOnly?\"numeric\":\"text\"}\n          pattern={numericOnly?\"[0-9]*\":undefined}\n          className=\"flex-grow p-2 border rounded\"\n          value={input}\n          onChange={e => setInput(e.target.value)}\n          placeholder=\"Type your answer…\"\n        />\n        <button className=\"bg-blue-600 text-white px-4 py-2 rounded\">\n          Send\n        </button>\n      </form>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}